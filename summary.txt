=====================
matmul-variations
=====================

N=100

Similar to matmul (A = A + B * C), except B and C becomes
(B + D) or (B * D) or their commuted version where D is
either another array or a constant.

Example of possibly generated code

A = A + (B + D) * (1.5 + C)

(Uppercase = matrix)

=====================
two-statements
=====================

N=100

Doubly-nested loop with two statements inside them.

Each statement looks like

A = _ * _ * _

Where A is always an array access, but _ can be either
an array access, a scalar, or a constant.

Also * can be either + or *

Example of possibly generated code

A = B * c + 1.5
C = c + c + D

=====================
two-statements-common-access
=====================

N=100

Similar to two-statements.

Except that the two statments are guaranteed to include at least one common array.

Example of possibly generated code

A = B * c + 1.5
C = c + c + B

Note that B appears in both statements.

Example of code that cannot be generated

A = B * c + 1.5
C = c + c + D

Note that the first statement has arrays A and B, while the second has C and D.
No array in common.

=====================
two-statements-mixed
=====================

N=250 two-statements
N=50 two-statements-common-access

=====================
vector
=====================

N=300

Vector (1D) operations
  A = B @ C @ D

@ can be either + or *.

Left hand size is always memory access.
If left hand side is scalar, it is in the form S[0].
(Otherwise scalar variables are passed by value and can't be output.)

Right hand side includes
* array read, A[i], B[i], C[i], S[0]
* scalar read a, b, c
* literal 2.0

Note that this space includes
* dot product
    S[0] = S[0] + A[i] * B[i]
* axpy
    A[i] = a * B[i] + C[i]
* scale
    A[i] = (a + b) * B[i]

=====================
3-ops
=====================

N=10

(Random seed 0)

Doubly nested loops with 1 statement.
Right hand side of each statement has 3 ops.
2 operands are guaranteed to be (2D) arrays.
Index is always [i][j].
The rest can be either scalars or literals.

Example:

A = B * C + D
B = a + B + A

=====================
2-2-ops
=====================

N=10

(Random seed 0)

Doubly nested loops with 2 statement.
Right hand side of each statement has 2 ops.
2 operands are guaranteed to be (2D) arrays.
Index is always [i][j].
The rest can be either scalars or literals.

Example:
A = B * C + 1.5 + b

